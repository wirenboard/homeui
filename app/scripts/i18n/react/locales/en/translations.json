{
   "scan": {
      "title": "New devices",
      "errors": {
         "scan": "Start scan failed",
         "common": "Error",
         "unavailable": "wb-device-manager service is unavailable or outdated"
      },
      "buttons": {
         "scan": "Start slow scan",
         "stop": "Stop slow scan",
         "to-serial": "Add to wb-mqtt-serial",
         "cancel": "Cancel"
      },
      "labels": {
         "device": "Device",
         "address": "Address",
         "port": "Port",
         "sn": "Serial number",
         "firmware": "Firmware",
         "available": "available {{version}}",
         "in-bootloder": "in bootloader",
         "not-polled": "not polled",
         "offline": "offline",
         "duplicate": "duplicate",
         "scanning": "Slow scanning in progress {{-ports}}...",
         "fast-scanning": "Fast scanning in progress {{-ports}}...",
         "scanning-stop": "Press \"Stop scan\", if all devices are found, or wait for completion",
         "found-devices": "Found devices: {{count}}",
         "first-start": "Scanning has not been performed yet.<br>Press \"Start scan\"",
         "not-found": "Nothing found.<br>For rescan press \"Start scan\"",
         "extended-modbus": "This device was found by scanning via fast Modbus",
         "try-normal-scan": "If the required devices are not found, run slow scan",
         "misconfigured-port": "differs from port settings",
         "duplicate-topic": "There is a device with the same MQTT topic",
         "unknown-device-type": "unknown device type",
         "similar-device-signatures": "also matches templates:<br>{{types}}"
      }
   },
   "com": {
      "wb": {
         "device_manager": {
            "failed_to_scan_error": "Scan failed for ports: {{ failed_ports }}. Check logs for more information",
            "error": "Error",
            "device": {
              "read_device_signature_error": "Failed to read device signature",
              "read_fw_version_error": "Failed to read FW version",
              "read_fw_signature_error": "Failed to read FW signature"
            }
         }
      }
   },
   "network-connections": {
      "labels": {
         "changes": "There are unsaved changes",
         "has-errors": "There are invalid parameters",
         "activated": "Connected",
         "activating": "Connecting",
         "deactivating": "Disconnecting",
         "not-connected": "Not connected",
         "deprecated": "Deprecated",
         "deactivating-by-cm": "Disconnecting because a higher priority connection is available",
         "deactivated-by-cm": "Disconnected because a higher priority connection is available",
         "limited-connectivity": "No internet access",
         "new": "New connection",
         "select-type": "Select connection type",
         "wifi": "Wi-Fi client",
         "wifi-ap": "Wi-Fi access point",
         "ethernet": "Wired connection (Ethernet)",
         "modem": "GSM-modem connection",
         "canbus": "CAN bus",
         "confirm-delete-connection": "Do you really want to delete the connection?",
         "main-deprecation-notice": "Connections {{connections}} are setup in /etc/network/interfaces. They can be managed by NetworkManager - this is a modern configuration service, support for which is currently being developed in Wiren Board. To switch to NetworkManager, use a pre-defined connections (or create new from scratch) and <strong>remove deprecated</strong>",
         "main-deprecation-notice_one":  "Connection {{connections}} is setup in /etc/network/interfaces. It can be managed by NetworkManager - this is a modern configuration service, support for which is currently being developed in Wiren Board. To switch to NetworkManager, use a pre-defined one (or create a new from scratch) and <strong>remove deprecated</strong>",
         "manual-connect": "Manual connect",
         "switcher": "Connection priorities",
         "connections": "Network connections",
         "high": "High priority",
         "medium": "Medium priority",
         "low": "Low priority",
         "sticky-connection-period": "Deny SIM/Wi-Fi switching period in seconds",
         "sticky-connection-period-desc": "The GSM modem can work with only one SIM card. To test connectivity, the current SIM card is disconnected and the tested one is connected. If a modem connection is successfully established with one of the SIM cards, do not switch the SIM card for testing for the specified period. This timeout also applies to Wi-Fi connections which also share a single physical wireless device.",
         "sticky-connection-period-default-text": "900",
         "debug": "Enable debug logging",
         "connectivity-url": "Connectivity check URL",
         "connectivity-url-desc": "To test connectivity, the service sends an HTTP GET request to specified URL.",
         "connectivity-url-default-text": "http://network-test.debian.org/nm",
         "connectivity-url-error-length": "The minimum URL length is {{length}} characters",
         "connectivity-url-error-format": "The URL must start with 'http://' or 'https://'",
         "connectivity-payload": "Connectivity check payload",
         "connectivity-payload-desc": "Connectivity check response content must contain specified string.",
         "connectivity-payload-default-text": "NetworkManager is online",
         "switcher-desc": "The service will automatically select the highest priority internet connection and route internet traffic through it. All connections except the modem will remain active and can be used for other tasks. The manager checks internet access every 5 seconds."
      },
      "buttons": {
         "save": "Save",
         "dont-save": "Don't save",
         "cancel": "Cancel",
         "add-connection": "Add connection",
         "delete": "Delete",
         "add": "Add",
         "connect": "Connect",
         "disconnect": "Disconnect"
      },
      "errors": {
         "write": "Error writing config. See wb-mqtt-confed logs for details"
      }
   },
   "editors": {
      "errors": {
         "integer": "Value must be an integer",
         "integer_min": "Value must be an integer equal or bigger than {{min}}",
         "integer_max": "Value must be an integer equal or less than {{max}}",
         "integer_minmax": "Value must be an integer in the range from {{min}} to {{max}}"
      }
   },
   "system": {
        "factory_reset": {
            "title": "Factory reset",
            "warning1": "Use \"Select firmware file\" button to update firmware and reset all settings to defaults",
            "warning2": "Use \"Perform factory reset\" button to reset all settings and software versions to factory defaults",
            "confirm_prompt": "Type \"factoryreset\" to confirm and continue",
            "modal_title": "Confirm reset",
            "modal_page": "<p><strong>All your data will be lost!</strong></p><p>You must confirm this action. It cannot be undone.</p>"
        },
        "update": {
            "title": "Firmware update",
            "help": "Download firmware",
            "expandrootfs": "Expand rootfs, if firmware supports it",
            "backup_modal_title": "rootfs backup archive",
            "backup_first_page": "<p>During update only files stored in /mnt/data are saved. <strong>Third-party software like nodered or SH will be removed!</strong></p><p>Press <strong>Download backup</strong> to download a rootfs backup archive, where some useful files like third-party service configs may be stored.</p><p>This backup archive currently can't be used to restore Wiren Board state.</p>",
            "backup_second_page": "<p>Great! Now <strong>wait until file is downloaded</strong> and press <strong>Select firmware file</strong> button to begin update process.</p>"
        },
        "errors": {
            "unavailable": "Firmware update service is not available",
            "stalled": "Firmware update stalled, something gone wrong",
            "reboot": "Reboot took too long",
            "unknown": "Firmware update error"
        },
        "buttons": {
            "reset": "Perform factory reset",
            "select": "Select firmware file",
            "select_and_reset": "Select firmware file and update with reset",
            "dismiss": "Dismiss",
            "hide": "Hide",
            "download_backup": "Download backup",
            "select_anyway": "I don't need a backup"
        },
        "states": {
            "complete": "Firmware update complete",
            "reboot": "Rebooting, please wait",
            "uploading": "Uploading firmware file",
            "uploaded": "Upload complete",
            "upload_error": "Upload error"
        },
        "cloud-status": {
            "title": "Cloud status",
            "activation-link-preamble": "To connect this Wiren Board to cloud, press",
            "activation-link": "this link",
            "status-ok": "Connected to cloud",
            "status-starting": "wb-cloud-agent service starting up",
            "status-connecting": "Connecting to cloud",
            "status-stopped": "wb-cloud-agent service is not running",
            "status-error": "Cloud connection error",
            "goto-cloud": "Open this controller in cloud"
        }
   },
   "view-svg-dashboard": {
      "buttons": {
         "fullscreen": "Enter fullscreen mode",
         "exit-fullscreen": "Exit fullscreen mode",
         "edit": "Edit"
      }
   },
   "edit-svg-dashboard": {
      "labels": {
         "create": "Create SVG dashboard",
         "edit": "Edit SVG dashboard",
         "common-parameters-title": "Common parameters",
         "common-parameters-id": "Id",
         "common-parameters-name": "Name",
         "common-parameters-fullscreen": "Fit fullscreen",
         "bindings-title": "Bindings",
         "write-enable": "Write",
         "read-enable": "Read",
         "style-enable": "Style",
         "visible-enable": "Visible",
         "channel": "Channel",
         "value": "Value",
         "tag-name": "Tag type: {{tag}}",
         "confirm-remove": "Do you really want to remove this dashboard?",
         "condition": "Condition",
         "select-channel-placeholder": "Select channel",
         "on": "Value on",
         "off": "Value off",
         "read-value-desc": "Example: ((val + 0) > 0) ? 'On' : 'Off'",
         "style-value-desc": "Example: (val) ? ';fill: green' : ';fill: red'",
         "long-press-enable": "Move to",
         "long-press-write-enable": "Write to channel",
         "dashboard": "Dashboard",
         "select-dashboard-placeholder": "Select the dashboard to move",
         "swipe-enable": "Swipe",
         "left": "Left",
         "right": "Right",
         "select-caption": "Click to select an element, Alt+Click to select a group",
         "long-press": "Long press/touch",
         "click": "Click/touch",
         "click-enable": "Move to",
         "group": "group",
         "text": "text",
         "path": "path",
         "circle": "circle",
         "rect": "rectangle"
      },
      "buttons": {
         "save": "Save",
         "cancel": "Cancel",
         "edit-json": "Edit as JSON",
         "load-svg": "Load SVG",
         "to-dashboards-list": "Dashboards list",
         "preview": "Preview",
         "remove": "Remove"
      }
   },
   "validator": {
      "errors": {
         "empty": "Enter value",
         "syntax": "Syntax error. Check that all quotes and parentheses are closed and periods and commas are in place"
      }
   },
   "errors": {
      "access-failed": "You cannot view this page. You can change ",
      "access-failed-link-text": "access level"
   },
   "forms": {
      "default-text-prefix": "If the value is not set, ",
      "default-text-postfix": " is used"
   },
   "device-manager": {
      "labels": {
         "title": "Device manager",
         "serial-port": "Serial port",
         "confirm-delete": "Do you really want to delete {{item}}?",
         "add-device": "Add device",
         "port": "Port",
         "device-type": "Device type",
         "settings": "wb-mqtt-serial settings",
         "unknown-device-type": "Unknown device type"
      },
      "buttons": {
         "save": "Save config",
         "add-port": "Add port",
         "delete": "Delete",
         "add-custom-device": "Manually add any device",
         "add-wb-device": "Find and add Wiren Board devices",
         "add": "Add",
         "copy": "Copy",
         "to-port-list": "To ports and devices list",
         "resolve-duplicate-mqtt-topic": "Set unique id"
      },
      "errors": {
         "write":"Error writing config. See wb-mqtt-confed logs for details",
         "device-config": "Error in the settings of one or more devices",
         "deprecated": "Device template is deprecated, use newer version",
         "unknown-device-type": "Unknown device type: {{type}}",
         "duplicate-slave-id": "Duplicate slave id",
         "duplicate-mqtt-topic": "MQTT id is the same as for {{device}}",
         "is-disconnected": "The device is not responding. Check the physical connection of the RS-485 bus and the communication settings of the port and device, which should be the same"
      }
   },
   "exp-check": {
      "found_title": "Your controller is at risk!",
      "details_text": "Anybody can access your controller from the Internet, here's list of problems detected:",
      "ssh_desc": "publicly accessible ssh with default root/wirenboard credentials",
      "http_desc": "web interface is available from the Internet without password",
      "mqtt_desc": "mqtt is available from the Internet without password",
      "found_instructions": "How to protect your Wiren Board controller",
      "support_url": "https://wirenboard.com/wiki/Security"
   }
}
